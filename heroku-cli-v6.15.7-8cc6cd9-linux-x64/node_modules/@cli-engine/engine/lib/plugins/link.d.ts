import Config from '../config';
import { IPluginOptions, Plugin, PluginType } from './plugin';
export interface IManifestPlugin {
    name: string;
    root: string;
}
export declare class LinkPlugins {
    private config;
    plugins: LinkPlugin[];
    private manifest;
    private lock;
    private debug;
    constructor(config: Config);
    install(root: string): Promise<void>;
    uninstall(name: string): Promise<void>;
    findByRoot(root: string): Promise<LinkPlugin | undefined>;
    submanagers(): Promise<LinkPlugin[]>;
    init(): Promise<void>;
    private hasPlugins();
    private _init();
    private migrate();
    private addPlugin(root);
    private removePlugin(name);
    private manifestPlugins();
    private loadPlugin(root, refresh?);
}
export declare class LinkPlugin extends Plugin {
    type: PluginType;
    private manifest;
    constructor(opts: IPluginOptions);
    refresh(force?: boolean): Promise<void>;
    reset(): Promise<void>;
    private updateNodeModulesNeeded();
    private prepareNeeded();
    private updateNodeModules();
    private prepare();
    private lastUpdated();
    private yarnNodeVersion();
}
